{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'fr-container',
  'fr-pt-3w',
  'fr-pb-3w',
  'fr-pb-md-7w',
  'pg-video-iframe'
] %}
{% block paragraph %}
    {% if paragraph.field_pg_background.value == 'blue' %}
      <div class="block--is-blue">
    {% endif %}
    <div{{ attributes.addClass(classes) }}>
      {% block content %}
      <div class="fr-grid-row fr-grid-row--gutters">
        <div class="fr-col-12 fr-col-md-6">

          {% if paragraph.field_pg_title.value is not empty %}
            <h2>{{ paragraph.field_pg_title.value }}</h2>
          {% endif %}
          {% if paragraph.field_pg_text.value is not empty %}
            <div class="wysiwyg">
              {{ paragraph.field_pg_text.value|raw }}
            </div>
          {% endif %}

          <iframe src="{{ paragraph.field_pg_iframe_url.value }}" title="{{ paragraph.field_pg_iframe_title.value }}"></iframe>

          {% if paragraph.field_pg_source.value is not empty %}
            <div class="wysiwyg pg-video-iframe__source">
              {{ paragraph.field_pg_source.value|class2wysiwygP('fr-text--sm')|raw }}
            </div>
          {% endif %}

          {% set id = paragraph.id.value %}
          <div class="fr-transcription pg-video-iframe__transcription" id="transcription-{{ id }}">
            <button
              class="fr-transcription__btn"
              aria-expanded="false"
              aria-controls="fr-transcription-collapse-transcription-{{ id }}"
              data-fr-js-collapse-button="true"
            >
              Transcription
            </button>
            <div
              class="fr-collapse"
              id="fr-transcription-collapse-transcription-{{ id }}"
              data-fr-js-collapse="true"
              style="--collapse-max-height: none; --collapse: -210px"
            >
              <div class="fr-transcription__footer">
                <div class="fr-transcription__actions-group">
                  <button
                    class="fr-btn--fullscreen fr-btn"
                    aria-controls="fr-transcription-modal-transcription-{{ id }}"
                    aria-label="Agrandir la transcription"
                    data-fr-opened="false"
                    id="button-{{ id }}-1"
                    data-fr-js-modal-button="true"
                  >
                    Agrandir
                  </button>
                </div>
              </div>
              <div
                id="fr-transcription-modal-transcription-{{ id }}"
                class="fr-modal"
                aria-labelledby="fr-transcription-modal-transcription-{{ id }}-title"
                data-fr-js-modal="true"
              >
                <div class="fr-container fr-container--fluid fr-container-md">
                  <div class="fr-grid-row fr-grid-row--center">
                    <div class="fr-col-12 fr-col-md-10 fr-col-lg-8">
                      <div
                        class="fr-modal__body"
                        data-fr-js-modal-body="true"
                        style="--modal-max-height: 719px"
                      >
                        <div class="fr-modal__header">
                          <button
                            class="fr-btn--close fr-btn"
                            aria-controls="fr-transcription-modal-transcription-{{ id }}"
                            id="button-{{ id }}-2"
                            title="Fermer"
                            data-fr-js-modal-button="true"
                          >
                            Fermer
                          </button>
                        </div>
                        <div class="fr-modal__content">
                          <h1
                            id="fr-transcription-modal-transcription-{{ id }}-title"
                            class="fr-modal__title"
                          >
                            Transcription : {{ paragraph.field_pg_iframe_title.value }}
                          </h1>
                          <div class="wysiwyg">
                            {{ paragraph.field_pg_transcription.value|raw }}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {% if paragraph.field_pg_cta.entity.field_pg_link.title is not empty %}
            {% if cta.title %}
              {% set pg_cta = pattern('button', {
                label: cta.text,
                title: cta.title,
                url: cta.url,
                target: cta.target,
                external: cta.external
              }, cta.style) %}
            {% else %}
              {% set pg_cta = pattern('button', {
                label: cta.text,
                url: cta.url,
                target: cta.target,
                external: cta.external
              }, cta.style) %}
            {% endif %}

            {{ pg_cta }}
          {% endif %}
        </div>
      </div>
      {% endblock %}
    </div>
      {% if paragraph.field_pg_background.value == 'blue' %}
        </div>
        {% endif %}
{% endblock paragraph %}
